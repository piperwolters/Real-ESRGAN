# general settings
name: esrgan_6S2_urban_larger2-finetuning-on-full
model_type: RealESRGANModel
scale: 4
num_gpu: auto
manual_seed: 0

# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False

high_order_degradation: False # do not use the high-order degradation generation process

# dataset and data loader settings
datasets:
  train:
    name: 18S2-NAIP
    type: RealESRGANPairedDataset
    dataroot: /data/piperw/full_dataset
    io_backend:
      type: disk

    tile_weights: /data/piperw/tile_weights/full_dataset_weights.json

    use_hflip: True
    use_rot: False

    use_3d: False
    output_size: 128
    n_s2_images: 6

    # data loader
    use_shuffle: false
    num_worker_per_gpu: 4
    batch_size_per_gpu: 32
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
     name: validation
     type: RealESRGANPairedDataset
     dataroot: /data/piperw/held_out_set
     num_worker_per_gpu: 1
     batch_size_per_gpu: 1

     use_3d: False
     output_size: 128
     n_s2_images: 6

     use_shuffle: false

     io_backend:
       type: disk

# network structures
network_g:
  type: RRDBNet4Blocks
  num_in_ch: 18
  num_out_ch: 3
  num_feat: 256
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  #pretrain_network_g: None #/home/piperw/forked-Real-ESRGAN/Real-ESRGAN/experiments/pretrained_models/RealESRNet_x4plus.pth
  pretrain_network_g: /data/piperw/Real-ESRGAN/experiments/esrgan_6S2_urban_larger2/models/net_g_420000.pth
  param_key_g: params_ema
  strict_load_g: true
  #pretrain_network_d: None #/home/piperw/forked-Real-ESRGAN/Real-ESRGAN/experiments/pretrained_models/RealESRGAN_x4plus_netD.pth
  pretrain_network_d: /data/piperw/Real-ESRGAN/experiments/esrgan_6S2_urban_larger2/models/net_d_420000.pth
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 1000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# Uncomment these for validation
# validation settings
val:
   val_freq: !!float 5e3
   save_img: False

   metrics:
     psnr: # metric name
       type: calculate_psnr
       crop_border: 4
       test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: multisat
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
